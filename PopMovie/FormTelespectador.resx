<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureRecarregarContadores.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAA/ZJREFUSEut
        V9tOE0EYbvQlPF14eAP1AQihuxw14RDlQhOjUYzGG8UgIG5rggkhXFCkiNIWBRKKUkwET1EjeLggGFFQ
        IWrUi1JBW6oLJNLtOt8wW9vZaW0JX/Il2/lPnZ3/MGvJFN6ysvWOs9ZNrVXSLhDPWGPitUVrVc72DkVS
        rtvlya763BlfU77/gbNoDuwnz1iDDDrQZWarR/PZrC1uuzzQ15gfeOMt1mYf79eDT8uFhGy8t1jra8gP
        eOyyz1mTvZm5yQwdNuuJnno5MDVQqokCpeK0r1TrJrZXbdJx5u7/wHm57VLHXUfBzx9Pku/wf4TtUEvR
        vMcmu9LKAY/N6hpx71FFzlbDYdde1W2TrjH3YrjqrMfuNBcERQ7iOf+yQg+PVVPiWaQTz6GWwuBVRTrF
        wiQCiYQzTfZ6QyMH9cVPN/SI+k3nEVG/6gsfO/Xg8AGhLXzizIUJ57FbbydLpPBopa4tBlgYgugy/U3X
        yLOByKKf6J422YNTA2Wa56LsY+FWcKU2ewdKRmSAoNHlBepYW5rV1Q+teujZoZgcz1iDDFj83JNgH09v
        Y17AUSttY2FJ6ZDCH/eWRHhFvF5jp8uhCT30/HCCPJ6QqR+cQpnB8d4SzaXIdSysxdJpl96JmgPOFMBu
        UgXliaTDW+DXEYM0lwkaFDVGDt7PK4FGIomcJGN4rEqP/vlNrKL6wnSHSd5dn+undY1MQ+/lFVAmFCR5
        4s80Ff8FNWAO7mvK81+pljda2mqsux+SZh8vBMOvaqgpzpiXiWgOaiAx+D1n4RymGpk80q4H5IchUKfa
        qDIPZPYv8mcMvVQ0Mjw8ds4ku99aNNtSnb3TgnnKv2o+eCZBcSx6NELtQi+OmeQYo5crszbQ5Oq5lDvD
        KxjBMwkKoqSAiPpFKI8lF+BBOT3aZ1JCNqM0+PVkRMlpS3M0MG2hnBzl1HlRekuDAmR6XBj3FpsaSDyx
        k9DzI0IZCNlyaJIGResU9e3XvcURMufPs7ArVxvcHHhFg2iDAHZD/4CpZTpjO8XRhEfPJNgb9DZwLRMg
        r7v/fX9JVGSAxo9dxECSR1v6TmkkErAyJMRBp8ithFyjbrFw/4BGgtGV9NZBXh3ODSOQBxIp9Vgs17uI
        b1QQC5cIlyIdTecigDIxLgKikuE56CgMuZSckyyMGLim4LoicrAaDrv2qG5FamfukwM1huBDjkJy2RM7
        S4ewHXQUBDttUnusbtNBuyJX4MyRFCLHqQgbnCmOjrnLDEg4kok+lMFrclFIeaEnDQg60CUVcjNpImUC
        1J7bJp/HEEfLQ781PmEw5vAJAxmag7MqdyszW1soirIO89T4aMMz1pg4TVgsfwFkJvvtFjNBwQAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>